/*
 * SProfTI API
 *
 * Seletor de Profissinais de TI API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: rubensagnelo@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using SProfTIAPI.Attributes;

using Microsoft.AspNetCore.Authorization;
using SProfTIAPI.Models;

namespace SProfTIAPI.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class CarteirausuarioApiController : ControllerBase
    { 
        /// <summary>
        /// Inclui um usuário de plataforma na carteira de selecao de profissionais do SProfTI
        /// </summary>
        /// <remarks>Inclui um usuário de plataforma na carteira de selecao de profissionais do SProfTI</remarks>
        /// <param name="body">Usuário da plataforma (CarteiraItem) para  inclusao na carteira do SProfTI</param>
        /// <response code="201">usuário da plataforma incluido na carteira</response>
        /// <response code="400">parametro ou estrutura de entrada inálida</response>
        /// <response code="409">usuário da plataforma já existente na carteira (nome da carteira ja existe)</response>
        [HttpPost]
        [Route("/rubensagnelo/sprotiapi/1.0.0/carteirausuario")]
        [ValidateModelState]
        [SwaggerOperation("Addusuarioplataformanacarteira")]
        public virtual IActionResult Addusuarioplataformanacarteira([FromBody]Carteirausuarioitem body)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Buscar usuários de plataforma em uma carteira  do SProfTI
        /// </summary>
        /// <remarks>Buscar um usuário de plataforma cadastrado em uma carteira do SProfTI</remarks>
        /// <param name="idCarteira">Identificador da carteira para buscar os usuários de plataformas cadastrados na carteira do SProfTI</param>
        /// <response code="200">resultados da consulta</response>
        /// <response code="400">valor do parametro inválido</response>
        [HttpGet]
        [Route("/rubensagnelo/sprotiapi/1.0.0/carteirausuario/{idCarteira}")]
        [ValidateModelState]
        [SwaggerOperation("Buscarusuariosplataformadacarteira")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Carteirausuariodetalhado>), description: "resultados da consulta")]
        public virtual IActionResult Buscarusuariosplataformadacarteira([FromRoute][Required]string idCarteira)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Carteirausuariodetalhado>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            exampleJson = "[ {\n  \"idplataforma\" : 1,\n  \"idusuarioplataforma\" : \"1204\",\n  \"nome\" : \"João da Silva\",\n  \"avatar\" : \"https://github.com/images/error/octocat_happy.gif\",\n  \"reputacao\" : 2041,\n  \"idCarteira\" : 123,\n  \"email\" : \"octocat@github.com\"\n}, {\n  \"idplataforma\" : 1,\n  \"idusuarioplataforma\" : \"1204\",\n  \"nome\" : \"João da Silva\",\n  \"avatar\" : \"https://github.com/images/error/octocat_happy.gif\",\n  \"reputacao\" : 2041,\n  \"idCarteira\" : 123,\n  \"email\" : \"octocat@github.com\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Carteirausuariodetalhado>>(exampleJson)
                        : default(List<Carteirausuariodetalhado>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Exclui um usuário de plataforma em uma carteira  do SProfTI
        /// </summary>
        /// <remarks>Exclui um usuário de plataforma em uma carteira  do SProfTI</remarks>
        /// <param name="idcarteira"></param>
        /// <param name="idcarteiraUsuario"></param>
        /// <param name="idplataforma"></param>
        /// <response code="204">usuário de plataforma excluído da carteira</response>
        /// <response code="400">usuário de plataforma da carteira inálido</response>
        /// <response code="404">usuário de plataforma nao encontrado na carteira</response>
        [HttpDelete]
        [Route("/rubensagnelo/sprotiapi/1.0.0/carteiraUsuario/{idcarteira}/{idcarteiraUsuario}/{idplataforma}")]
        [ValidateModelState]
        [SwaggerOperation("CarteiraUsuarioIdcarteiraIdcarteiraUsuarioIdplataformaDelete")]
        public virtual IActionResult CarteiraUsuarioIdcarteiraIdcarteiraUsuarioIdplataformaDelete([FromRoute][Required]int? idcarteira, [FromRoute][Required]int? idcarteiraUsuario, [FromRoute][Required]int? idplataforma)
        { 
            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            throw new NotImplementedException();
        }
    }
}
