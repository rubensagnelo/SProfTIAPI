/*
 * SProfTI API
 *
 * Seletor de Profissinais de TI API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: rubensagnelo@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using SProfTIAPI.Attributes;

using Microsoft.AspNetCore.Authorization;
using SProfTIAPI.Models;
using SProfTIAPI.Services;

namespace SProfTIAPI.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class UsuarioplataformaApiController : ControllerBase
    { 
        /// <summary>
        /// Busca um usuário de uma plataforma
        /// </summary>
        /// <remarks>Busca um usuário de uma plataforma (Github, SteckOverflow)</remarks>
        /// <param name="idplataforma">id do usuário na plataforma (user_id no StackOverflow e id no GitHub)</param>
        /// <param name="idUsuarioplataforma">quantidades de registros</param>
        /// <response code="200">resultados da consulta</response>
        /// <response code="400">valor do parametro inválido</response>
        [HttpGet]
        [Route("/rubensagnelo/sprotiapi/1.0.0/usuarioplataforma/{idplataforma}/{idUsuarioplataforma}")]
        [ValidateModelState]
        [SwaggerOperation("Buscarusuariopnaplataforma")]
        [SwaggerResponse(statusCode: 200, type: typeof(Usuarioplataformaitem), description: "resultados da consulta")]
        public virtual IActionResult Buscarusuariopnaplataforma([FromRoute][Required]int idplataforma, [FromRoute][Required]int? idUsuarioplataforma)
        { 
            int rspStc = 0;
            Usuarioplataformaitem objResp = UsuarioPlataformaService.GetUser(idUsuarioplataforma, (enums.enmPlataforma)idplataforma);
            return StatusCode(rspStc, objResp);
        }

        /// <summary>
        /// Consulta uma carteiraum usuários pelo identificador da plataforma
        /// </summary>
        /// <remarks>Consulta usuários pelo identificador da plataforma ( dados retornados pela API da plataforma GitHub ou StackOverflow)</remarks>
        /// <param name="idplataforma">idIdentificador da plataforma (GitHub ou StackOverflow)</param>
        /// <response code="200">resultados da consulta</response>
        /// <response code="400">valor do parametro inválido</response>
        [HttpGet]
        [Route("/rubensagnelo/sprotiapi/1.0.0/usuarioplataforma/{idplataforma}")]
        [ValidateModelState]
        [SwaggerOperation("UsuarioplataformaIdplataformaGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Usuarioplataformaitem>), description: "resultados da consulta")]
        public virtual IActionResult UsuarioplataformaIdplataformaGet([FromRoute][Required]int? idplataforma)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Usuarioplataformaitem>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            exampleJson = "[ {\n  \"idusuarioplatafaorma\" : \"12345\",\n  \"idplataforma\" : 123,\n  \"nome\" : \"João da Silva\",\n  \"avatar\" : \"https://github.com/images/error/octocat_happy.gif\",\n  \"reputacao\" : 2041,\n  \"email\" : \"octocat@github.com\"\n}, {\n  \"idusuarioplatafaorma\" : \"12345\",\n  \"idplataforma\" : 123,\n  \"nome\" : \"João da Silva\",\n  \"avatar\" : \"https://github.com/images/error/octocat_happy.gif\",\n  \"reputacao\" : 2041,\n  \"email\" : \"octocat@github.com\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Usuarioplataformaitem>>(exampleJson)
                        : default(List<Usuarioplataformaitem>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
